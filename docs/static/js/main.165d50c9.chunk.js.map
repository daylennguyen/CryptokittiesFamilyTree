{"version":3,"sources":["components/Stepper.tsx","components/DarkModeToggleButton.tsx","components/Description.tsx","components/KittySubmit.tsx","components/ScanningKittiesLoader.tsx","components/Title.tsx","util/fetchCKBoxData.ts","components/NetworkToggleBtnGroup.tsx","network.tsx","util/fetchKitty.js","components/KittyInfoCard.tsx","components/GeneTable.tsx","index.tsx"],"names":["props","Stepper","activeStep","alternativeLabel","style","marginTop","Step","StepLabel","icon","isDark","Fab","color","aria-label","position","right","bottom","onClick","DescriptionText","Typography","variant","href","ExpansionPanel","marginBottom","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","justifyContent","KittySubmit","onSubmit","event","persist","preventDefault","input","document","querySelector","onKittySubmit","display","flexFlow","alignItems","TextField","required","fullWidth","name","id","autoFocus","label","htmlFor","Button","marginLeft","type","Box","flexDirection","CircularProgress","count","Title","React","kittyEmoji","setEmoji","Emotes","textDecoration","minWidth","role","onMouseOver","rand","Math","floor","random","length","onMouseLeave","ckbox_url","callback","a","fetch","method","headers","origin","location","then","response","json","catch","err","console","error","kittyId","cattribute_legend","setTraits","trait_data","arr","KittyDecode","log","result","index","currentTraitRow","trait_num","push","toString","padStart","NetworkToggleBtnGroup","layout","setLayout","selected","setSelected","ToggleButtonGroup","value","onChange","newAlignment","HandleLayoutChange","exclusive","ToggleButton","key","Tooltip","title","physics","StructureNetwork","networkComponent","state","layoutDirection","this","current","network","on","nodes","getKitty","setSelectedKitty","fetchKittyGenetics","cattributes","setTraitData","nextProps","nextState","edges","background","border","borderRadius","options","interaction","hover","selectConnectedEdges","tooltipDelay","autoResize","hierarchical","enabled","direction","sortMethod","shadow","font","size","smooth","arrows","ref","map","singleNode","singleEdge","ev","setState","toggle","apiURL","invalidKittyAlert","kittyid","makeEdgeComponent","from","to","makeNodeComponent","gen","level","shape","image","img","ExtractNode","jsonKitty","image_url_png","generation","ExtractEdge","edgeid","matron","sire","setCount","setActiveStep","NodeArray","EdgeArray","Kittyqueue","idArray","text","jsonForm","JSON","parse","alert","edgeIdCount","fetchingCKOnInterval","setInterval","currentKitty","shift","includes","warn","curredge","nodeJson","clearInterval","KittyNodeComponents","KittyEdgeComponents","edgeJson","cardStyle","Card","CardContent","SelectedKitty","CardMedia","component","alt","height","width","Skeleton","ValueText","children","InfoHeader","owner","address","nickname","otherProps","DefaultCells","TableCell","ExpansionWrapper","i","createCellsForRow","traits","traitName","TableContainer","Table","TableHead","TableRow","TableBody","darkTheme","createMuiTheme","palette","lightTheme","DonationFooter","margin","async","src","className","data-ad-client","data-ad-slot","data-ad-format","data-full-width-responsive","App","kittyNodes","kittyEdges","scannedKitties","theme","checked","selectedKitty","fetchCattributes","ThemeProvider","CssBaseline","DarkModeToggleButton","setStateThemeIsDark","Container","Description","Collapse","in","padding","handleKittySubmit","ScanningKittiesLoader","KittyInfoCard","setCattributes","data","kitty","GeneTable","reInitializeState","setTimeout","checkForFullKittyAddress","slice","lastIndexOf","ParsedInt","Number","parseInt","isNaN","asyncGetKittyJSON","Nodes","Edges","inputKitty","ScannedCount","step","rootElement","getElementById","render"],"mappings":"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","file":"static/js/main.165d50c9.chunk.js","sourcesContent":["import { StepLabel, Stepper, Step } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nexport default function (props) {\r\n\treturn (\r\n\t\t<Stepper\r\n\t\t\tactiveStep={props.activeStep}\r\n\t\t\talternativeLabel\r\n            style={{ marginTop: '10px' }}\r\n            {...props}\r\n\t\t>\r\n\t\t\t<Step>\r\n\t\t\t\t<StepLabel>Submit KittyId</StepLabel>\r\n\t\t\t</Step>\r\n\t\t\t<Step>\r\n\t\t\t\t<StepLabel>Scan Ancestor Kitties</StepLabel>\r\n\t\t\t</Step>\r\n\t\t\t<Step>\r\n\t\t\t\t<StepLabel>Create Graph Elements</StepLabel>\r\n\t\t\t</Step>\r\n\t\t\t<Step>\r\n\t\t\t\t<StepLabel>View Graph</StepLabel>\r\n\t\t\t</Step>\r\n            {/* {...children} */}\r\n\t\t</Stepper>\r\n\t);\r\n}\r\n","import * as React from 'react';\r\nimport Brightness5Icon from '@material-ui/icons/Brightness5Outlined';\r\nimport Brightness4Icon from '@material-ui/icons/Brightness4Outlined';\r\nimport Fab from '@material-ui/core/Fab';\r\n// import { useMediaQuery } from '@material-ui/core';\r\n\r\n// Floating Action Button used to toggle on/off the dark theme\r\nexport default function (props: {\r\n\tisDark: boolean;\r\n\tonClick:\r\n\t\t| ((event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void)\r\n\t\t| undefined;\r\n}) {\r\n\t// const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\r\n\tvar icon = props.isDark === true ? <Brightness5Icon /> : <Brightness4Icon />;\r\n\treturn (\r\n\t\t<Fab\r\n\t\t\tcolor={props.isDark === false ? 'primary' : 'secondary'}\r\n\t\t\taria-label=\"Dark Mode Toggle\"\r\n\t\t\tstyle={{ position: 'fixed', right: '25px', bottom: '75px' }}\r\n\t\t\tonClick={props.onClick}\r\n\t\t>\r\n\t\t\t{icon}\r\n\t\t</Fab>\r\n\t);\r\n}\r\n","import {\r\n\tExpansionPanel,\r\n\tExpansionPanelDetails,\r\n\tExpansionPanelSummary,\r\n\tTypography,\r\n} from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport React from 'react';\r\n\r\nconst DescriptionText = () => (\r\n\t<Typography color=\"textSecondary\" variant=\"body2\">\r\n\t\tCK-Tree is an open-source cryptokitty ancestor visualization tool.\r\n\t\t<br />\r\n\t\tEnter a kitty id or full kitty id to scan a kittie's ancestors and display\r\n\t\tan awesome network-graph/family tree!\r\n\t\t<br />\r\n\t\t<u><a href=\"https://github.com/daylennguyen/CryptokittiesFamilyTree\">Or visit the github repo! (Stars are much appreciated ^-^)</a></u>\r\n\t</Typography>\r\n);\r\n\r\n// The expandable panel at the top of the page\r\nexport default function(props: any) {\r\n\treturn (\r\n\t\t<ExpansionPanel style={{ marginBottom: '10px', marginTop:'20px' }}>\r\n\t\t\t<ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n\t\t\t\t<Typography variant='subtitle2'><strong>Description</strong></Typography>\r\n\t\t\t</ExpansionPanelSummary>\r\n\t\t\t<ExpansionPanelDetails style={{ justifyContent: 'center' }}>\r\n\t\t\t\t<DescriptionText />\r\n\t\t\t</ExpansionPanelDetails>\r\n\t\t</ExpansionPanel>\r\n\t);\r\n}\r\n","import * as React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button  from \"@material-ui/core/Button\";\r\n// Component containing the form in which the user will input and submit the kitty id\r\n\r\n\r\nfunction KittySubmit(props: { onKittySubmit: (arg0: any) => void; }) {\r\n\treturn (\r\n\t\t<form \r\n\t\t\tonSubmit={(event) => {\r\n\t\t\t\tevent.persist();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\t// get the text-field value\r\n\t\t\t\tlet kittyIdField = document.querySelector(\"#kitty-id-field\") as HTMLInputElement \r\n\t\t\t\tlet input: any = kittyIdField[\"value\"];\r\n\t\t\t\tprops.onKittySubmit(input);\r\n\t\t\t}}\r\n\t\t\tstyle={{\r\n\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\tflexFlow: \"row\",\r\n\t\t\t\talignItems: \"center\",\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<TextField\r\n\t\t\t\trequired\r\n\t\t\t\tfullWidth\r\n\t\t\t\tname=\"kitty-id-field\"\r\n\t\t\t\tid=\"kitty-id-field\"\r\n\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\tautoFocus={true}\r\n\t\t\t\tlabel=\"Kitty id or Full Kitty Url\"\r\n\t\t\t/>\r\n\t\t\t<label htmlFor=\"submit-kitty-id-button\">\r\n\t\t\t\t<Button\r\n\t\t\t\t\tstyle={{ marginLeft: \"25px\" }}\r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t>\r\n\t\t\t\t\tSubmit\r\n\t\t\t\t</Button>\r\n\t\t\t</label>\r\n\t\t</form>\r\n\t);\r\n}\r\n\r\nexport default KittySubmit;\r\n","import * as React from 'react';\r\nimport { CircularProgress, Box, Typography } from '@material-ui/core';\r\n\r\n//\r\nexport default function(props: { count: React.ReactNode; activeStep: number; }) {\r\n\treturn (\r\n\t\t<Box\r\n\t\t\tstyle={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}\r\n\t\t>\r\n\t\t\t<CircularProgress style={{ marginBottom: 10 }} />\r\n\t\t\t<Typography variant=\"h6\">\r\n\t\t\t\t{props.count}{' '}\r\n\t\t\t\t{props.activeStep === 1\r\n\t\t\t\t\t? 'Kitties Scanned'\r\n\t\t\t\t\t: 'Kitties Converted to Graph Elements'}\r\n\t\t\t</Typography>\r\n\t\t</Box>\r\n\t);\r\n}\r\n","import * as React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nexport default function Title() {\r\n\tconst [kittyEmoji, setEmoji] = React.useState('🐱');\r\n\tconst Emotes = ['😼', '😹', '🙀', '😾', '😿', '😻', '😺', '😸', '😽'];\r\n\treturn (\r\n\t\t<header style={{marginTop: '50px',marginBottom: '50px'}}>\r\n\t\t\t<a href=\"/\" style={{ textDecoration: 'none', }}>\r\n\t\t\t\t<Typography variant=\"h2\" color=\"textPrimary\" style={{display:'flex', justifyContent:'center'}}>\r\n\t\t\t\t\tCK-Tree\r\n\t\t\t\t\t<span\r\n\t\t\t\t\tstyle={{minWidth:'83px'}}\r\n\t\t\t\t\t\trole=\"img\"\r\n\t\t\t\t\t\taria-label=\"kitty\"\r\n\t\t\t\t\t\tonMouseOver={() => {\r\n\t\t\t\t\t\t\t// set the kitty face to a random one from the array\r\n\t\t\t\t\t\t\tlet rand = Math.floor(Math.random() * Emotes.length);\r\n\t\t\t\t\t\t\tsetEmoji(Emotes[rand]);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonMouseLeave={() => {\r\n\t\t\t\t\t\t\t// return the kitty face to default value\r\n\t\t\t\t\t\t\tsetEmoji('🐱');\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{kittyEmoji}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span role=\"img\" aria-label=\"tree\">\r\n\t\t\t\t\t\t🌲\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</Typography>\r\n\t\t\t</a>\r\n\t\t</header>\r\n\t);\r\n}\r\n","// https://api.ckbox.co/cattributes\r\n// https://api.ckbox.co/kitties?id=\r\nconst cattributes_url = 'https://api.ckbox.co/cattributes';\r\nconst ckbox_url = 'https://api.ckbox.co/kitties?id=';\r\n\r\nexport async function fetchCattributes(callback: any) {\r\n\t// Fix for the blocker, \"blocked by cors policy\"\r\n\t// we use a proxy service to insert _CORS headers_ into the ckbox response\r\n\tfetch(`https://cors-anywhere.herokuapp.com/${cattributes_url}`, {\r\n\t\tmethod: 'GET',\r\n\t\theaders: {\r\n\t\t\torigin: document.location.href,\r\n\t\t},\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.then((json) => {\r\n\t\t\t// console.log(json);\r\n\t\t\tcallback(json);\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.error(err);\r\n\t\t});\r\n}\r\n// Function to fetch and decipher the CKBox data for a specific kitty\r\nexport async function fetchKittyGenetics(\r\n\tkittyId: number,\r\n\tcattribute_legend: any,\r\n\tsetTraits: any\r\n) {\r\n\tvar result = await fetch(\r\n\t\t`https://cors-anywhere.herokuapp.com/${ckbox_url}${kittyId}`,\r\n\t\t{\r\n\t\t\tmethod: 'GET',\r\n\t\t\theaders: {\r\n\t\t\t\torigin: document.location.href,\r\n\t\t\t},\r\n\t\t}\r\n\t)\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.then((trait_data) => {\r\n\t\t\t// json[0] contains an array (len:12)\r\n\t\t\t// each index contains a legend for decrypting the kitty genes:\r\n\t\t\t// { api_desc: [string], api_type: string, codex_type: string, gen0_pos: [number], gene_desc: [string], group_n: num, group_tag: string}\r\n\t\t\tvar arr = KittyDecode(cattribute_legend, trait_data);\r\n\t\t\t// console.log(arr)\r\n\t\t\tsetTraits(arr);\r\n\t\t\treturn arr;\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log(err);\r\n\t\t});\r\n\r\n\treturn result;\r\n}\r\n\r\nconst KittyDecode = (cattribute_legend, trait_data) => {\r\n\tvar result: string[][] = [];\r\n\t// kitty trait table will be a 12x4 2D Array\r\n\tfor (let index = 1; index <= 12; index++) {\r\n\t\tvar currentTraitRow: string[] = [];\r\n\t\tfor (const trait_num of trait_data[0][`g${index}`]) {\r\n\t\t\tcurrentTraitRow.push(\r\n\t\t\t\t// check if the trait has a name defined in the legend\r\n\t\t\t\tcattribute_legend[index - 1]['api_desc'][trait_num] === null\r\n\t\t\t\t\t? `${\r\n\t\t\t\t\t\t\t// if it doesn't, append and pad the trait number to the geneType/group_tag. Ex: WE05\r\n\t\t\t\t\t\t\tcattribute_legend[index - 1]['group_tag']\r\n\t\t\t\t\t  }${trait_num.toString().padStart(2, '0')}`\r\n\t\t\t\t\t: cattribute_legend[index - 1]['api_desc'][trait_num]\r\n\t\t\t);\r\n\t\t}\r\n\t\tresult.push(currentTraitRow);\r\n\t}\r\n\tconsole.log(result);\r\n\treturn result;\r\n};\r\n","import * as React from 'react';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup'; // Component containing the form in which the user will input and submit the kitty id\r\nimport KeyboardArrowDownRoundedIcon from '@material-ui/icons/KeyboardArrowDownRounded';\r\nimport KeyboardArrowLeftRoundedIcon from '@material-ui/icons/KeyboardArrowLeftRounded';\r\nimport KeyboardArrowRightRoundedIcon from '@material-ui/icons/KeyboardArrowRightRounded';\r\nimport KeyboardArrowUpRoundedIcon from '@material-ui/icons/KeyboardArrowUpRounded';\r\nimport ControlCameraIcon from '@material-ui/icons/ControlCamera';\r\nimport FitnessCenterIcon from '@material-ui/icons/FitnessCenter';\r\nimport { Tooltip } from '@material-ui/core';\r\nfunction NetworkToggleBtnGroup(props) {\r\n\tconst [layout, setLayout] = React.useState('UD');\r\n\tconst [selected, setSelected] = React.useState(true);\r\n\r\n\tconst handleChange = (event, newAlignment) => {\r\n\t\tif (newAlignment !== null) {\r\n\t\t\tsetLayout(newAlignment);\r\n\t\t\tprops.HandleLayoutChange(newAlignment);\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<span style={{ display: 'flex', justifyContent: 'space-around' }}>\r\n\t\t\t<ToggleButtonGroup\r\n\t\t\t\t// style={{ display: 'flex' }}\r\n\t\t\t\tvalue={layout}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\texclusive\r\n\t\t\t>\r\n\t\t\t\t<ToggleButton value=\"UD\" key={1}>\r\n\t\t\t\t\t<Tooltip title=\"UpDown Layout\" aria-label=\"UpDown Graph Layout\">\r\n\t\t\t\t\t\t<KeyboardArrowDownRoundedIcon />\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t</ToggleButton>\r\n\t\t\t\t<ToggleButton value=\"RL\" key={2}>\r\n\t\t\t\t\t<Tooltip title=\"RightLeft Layout\" aria-label=\"RightLeft Graph Layout\">\r\n\t\t\t\t\t\t<KeyboardArrowLeftRoundedIcon />\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t</ToggleButton>\r\n\t\t\t\t<ToggleButton value=\"LR\" key={3}>\r\n\t\t\t\t\t<Tooltip title=\"LeftRight Layout\" aria-label=\"LeftRight Graph Layout\">\r\n\t\t\t\t\t\t<KeyboardArrowRightRoundedIcon />\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t</ToggleButton>\r\n\t\t\t\t<ToggleButton value=\"DU\" key={4}>\r\n\t\t\t\t\t<Tooltip title=\"DownUp Layout\" aria-label=\"DownUp Graph Layout\">\r\n\t\t\t\t\t\t<KeyboardArrowUpRoundedIcon />\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t</ToggleButton>\r\n\t\t\t\t<ToggleButton value=\"UNLOCK\" key={5}>\r\n\t\t\t\t\t<Tooltip title=\"Unlocked Layout\" aria-label=\"Unlocked Graph Layout\">\r\n\t\t\t\t\t\t<ControlCameraIcon />\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t</ToggleButton>\r\n\t\t\t</ToggleButtonGroup>\r\n\t\t\t<ToggleButton\r\n\t\t\t\tvalue=\"PHYSICS\"\r\n\t\t\t\tkey={6}\r\n\t\t\t\tselected={selected}\r\n\t\t\t\tonChange={() => {\r\n\t\t\t\t\tsetSelected(!selected);\r\n\t\t\t\t\tprops.physics(!selected);\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Tooltip title=\"Physics Toggle\" aria-label=\"Physics Toggle\">\r\n\t\t\t\t\t<FitnessCenterIcon />\r\n\t\t\t\t</Tooltip>\r\n\t\t\t</ToggleButton>\r\n\t\t</span>\r\n\t);\r\n}\r\n\r\nexport default NetworkToggleBtnGroup;\r\n","import * as React from 'react';\r\nimport { Network } from '@lifeomic/react-vis-network';\r\nimport { fetchKittyGenetics } from './util/fetchCKBoxData';\r\nimport NetworkToggleBtnGroup from './components/NetworkToggleBtnGroup';\r\n\r\ninterface NetProps {\r\n\tclassName: string;\r\n\tisDark: boolean;\r\n\tedges: any[];\r\n\tnodes: any[];\r\n\tsetSelectedKitty: any;\r\n\tsetCattributes: any;\r\n\tcattributes: any;\r\n\tsetTraitData: any;\r\n}\r\ninterface NetState {\r\n\tlayoutDirection: string;\r\n\tphysics: boolean;\r\n}\r\n\r\nasync function getKitty(kittyId, callback) {\r\n\tvar response = await fetch('https://api.cryptokitties.co/kitties/' + kittyId);\r\n\tvar json = await response.json();\r\n\t// console.log(json);\r\n\tcallback(json);\r\n}\r\n\r\n// Use VisJS network graph to display the family tree. In style 😎\r\nexport class StructureNetwork extends React.Component<NetProps, NetState> {\r\n\tprivate networkComponent: any = React.createRef();\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { layoutDirection: 'UD', physics: true };\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\t// when the graph is clicked\r\n\t\tthis.networkComponent.current.network.on('click', (event: any) => {\r\n\t\t\tif (event.nodes.length !== 0) {\r\n\t\t\t\tgetKitty(event['nodes'][0], this.props.setSelectedKitty);\r\n\t\t\t\t// console.log(event['nodes'][0]);\r\n\t\t\t\tfetchKittyGenetics(\r\n\t\t\t\t\tevent['nodes'][0],\r\n\t\t\t\t\tthis.props.cattributes,\r\n\t\t\t\t\tthis.props.setTraitData\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\t// console.log()\r\n\t\t});\r\n\t}\r\n\tshouldComponentUpdate(nextProps, nextState) {\r\n\t\tif (\r\n\t\t\tthis.props.isDark !== nextProps.isDark ||\r\n\t\t\tthis.state.layoutDirection !== nextState.layoutDirection ||\r\n\t\t\tthis.state.physics !== nextState.physics\r\n\t\t)\r\n\t\t\treturn true;\r\n\t\tif (this.props.edges.length === nextProps.edges.length) {\r\n\t\t\treturn false;\r\n\t\t} else {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\t// const {isDark,nodes,edges} = props\r\n\t\t// console.log(this.state);\r\n\t\tconst result = (\r\n\t\t\t<span>\r\n\t\t\t\t<Network\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tbackground: this.props.isDark === false ? 'white' : '#424242',\r\n\t\t\t\t\t\tborder:\r\n\t\t\t\t\t\t\tthis.props.isDark === false\r\n\t\t\t\t\t\t\t\t? '1px solid rgba(0, 0, 0, 0.12)'\r\n\t\t\t\t\t\t\t\t: '1px solid rgba(255, 255, 255, 0.12)',\r\n\t\t\t\t\t\tborderRadius: '10px',\r\n\t\t\t\t\t\tmarginTop: 25,\r\n\t\t\t\t\t\tmarginBottom: 25,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\toptions={{\r\n\t\t\t\t\t\tphysics: this.state.physics,\r\n\t\t\t\t\t\tinteraction: {\r\n\t\t\t\t\t\t\thover: true,\r\n\t\t\t\t\t\t\tselectConnectedEdges: false,\r\n\r\n\t\t\t\t\t\t\ttooltipDelay: 0,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tautoResize: true,\r\n\t\t\t\t\t\tlayout: {\r\n\t\t\t\t\t\t\thierarchical: {\r\n\t\t\t\t\t\t\t\tenabled: this.state.layoutDirection === 'UNLOCK' ? false : true,\r\n\t\t\t\t\t\t\t\tdirection:\r\n\t\t\t\t\t\t\t\t\tthis.state.layoutDirection === 'UNLOCK'\r\n\t\t\t\t\t\t\t\t\t\t? 'UD'\r\n\t\t\t\t\t\t\t\t\t\t: this.state.layoutDirection,\r\n\t\t\t\t\t\t\t\tsortMethod: 'directed',\r\n\t\t\t\t\t\t\t\t// shakeTowards: 'leaves',\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tnodes: {\r\n\t\t\t\t\t\t\tshadow: true,\r\n\t\t\t\t\t\t\tfont: {\r\n\t\t\t\t\t\t\t\tsize: 10,\r\n\t\t\t\t\t\t\t\tcolor: this.props.isDark === false ? 'black' : 'white',\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tedges: {\r\n\t\t\t\t\t\t\tcolor: { hover: '#ff0000' },\r\n\t\t\t\t\t\t\tsmooth: { type: 'cubicBezier' },\r\n\t\t\t\t\t\t\tarrows: 'from',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tref={this.networkComponent}\r\n\t\t\t\t>\r\n\t\t\t\t\t{this.props.nodes === []\r\n\t\t\t\t\t\t? null\r\n\t\t\t\t\t\t: this.props.nodes.map((singleNode) => {\r\n\t\t\t\t\t\t\t\treturn singleNode;\r\n\t\t\t\t\t\t  })}\r\n\t\t\t\t\t{this.props.edges === []\r\n\t\t\t\t\t\t? null\r\n\t\t\t\t\t\t: this.props.edges.map((singleEdge) => {\r\n\t\t\t\t\t\t\t\treturn singleEdge;\r\n\t\t\t\t\t\t  })}\r\n\t\t\t\t</Network>\r\n\t\t\t\t<NetworkToggleBtnGroup\r\n\t\t\t\t\tlayout={this.state.layoutDirection}\r\n\t\t\t\t\tHandleLayoutChange={(ev) => {\r\n\t\t\t\t\t\t// console.log(layout)\r\n\t\t\t\t\t\t// console.log(ev);\r\n\t\t\t\t\t\tthis.setState({ layoutDirection: ev });\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tphysics={(toggle: boolean) => {\r\n\t\t\t\t\t\tthis.setState({ physics: toggle });\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</span>\r\n\t\t) as React.ReactNode;\r\n\r\n\t\treturn result;\r\n\t}\r\n}\r\n","// good example kitty small tree 922339\r\n// medium tree - 1812122\r\nimport React from 'react';\r\nimport { Node, Edge } from '@lifeomic/react-vis-network';\r\n// ex. kitty url\r\n// https://www.cryptokitties.co/kitty/1828056\r\nconst FETCH_INTERVAL = 300, // how often we make a fetch to the api\r\n\tSTEP_CONVERT_TO_ELEMENTS = 2,\r\n\tapiURL = 'https://api.cryptokitties.co/kitties/',\r\n\tkittyAnchor = '/kitty/',\r\n\tinvalidKittyAlert = (kittyid) =>\r\n\t\t`Invalid Kitty - Kitty Not Found!\\n\\nNo Kitty Found at:\\nhttps://api.cryptokitties.co/kitties/${kittyid}\\n\\nPlease enter a valid kitty id`;\r\nexport function checkForFullKittyAddress(address)\r\n{\r\n\tlet result = false;\r\n\tif (address.includes(kittyAnchor))\r\n\t{\r\n\t\tresult = true;\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport function fullAddressToShortID(address)\r\n{\r\n\tlet result = address.slice(\r\n\t\taddress.lastIndexOf(kittyAnchor) + kittyAnchor.length\r\n\t);\r\n\treturn result;\r\n}\r\n\r\nfunction makeEdgeComponent(json)\r\n{\r\n\tconst result = (<Edge key={ json.id } id={ json.id } from={ json.from } to={ json.to } />);\r\n\treturn result;\r\n}\r\n\r\n// create the kitty node to be inserted into the graph\r\nfunction makeNodeComponent(json)\r\n{\r\n\t// console.log(json);\r\n\treturn (\r\n\t\t<Node\r\n\t\t\tid={ `${json.id}` }\r\n\t\t\tkey={ `${json.key}` }\r\n\t\t\ttitle={ `(Gen. ${json.gen}) (${\r\n\t\t\t\tjson.name !== null ? json.name : '#' + json.id\r\n\t\t\t\t})` }\r\n\t\t\tlevel={ json.gen }\r\n\t\t\tshape=\"image\"\r\n\t\t\tsize={ 100 }\r\n\t\t\timage={ json.img }\r\n\t\t/>\r\n\t);\r\n}\r\n\r\n// removes unnecessary data from kitty json given by api\r\nconst ExtractNode = (jsonKitty) =>\r\n{\r\n\treturn {\r\n\t\tid: jsonKitty.id,\r\n\t\tkey: jsonKitty.id,\r\n\t\timg: jsonKitty.image_url_png,\r\n\t\tgen: jsonKitty.generation,\r\n\t\tname: jsonKitty.name,\r\n\t};\r\n};\r\n// pass the child, it will return an object containing the JSON that will be converted to edges\r\nconst ExtractEdge = (jsonKitty, edgeid) =>\r\n{\r\n\treturn {\r\n\t\tmatron: {\r\n\t\t\tfrom: jsonKitty.id,\r\n\t\t\tto: jsonKitty.matron.id,\r\n\t\t\tid: edgeid + 1,\r\n\t\t},\r\n\t\tsire: { from: jsonKitty.id, to: jsonKitty.sire.id, id: edgeid },\r\n\t};\r\n};\r\n\r\n// perform breadth first search to retrieve the ancestors of our kitties\r\nexport async function asyncGetKittyJSON(\r\n\tkittyid,\r\n\tcallback,\r\n\tsetCount,\r\n\tsetActiveStep\r\n)\r\n{\r\n\t//Array of JSON objects to be converted in to Nodes within the graph\r\n\tvar NodeArray = [], // id ,key ,label ,img\r\n\t\t// contains the edges for the graph (JSON OBJ)\r\n\t\tEdgeArray = [], // edges = id ,from ,to\r\n\t\t// holds the response, from fetching the matron and sire of each kitty.\r\n\t\t// the calls will end when this queue/array is empty.\r\n\t\tKittyqueue = [];\r\n\tvar idArray = [];\r\n\tvar currentKitty,\r\n\t\tresponse = await fetch(apiURL + kittyid);\r\n\tvar jsonForm = await response.text();\r\n\ttry\r\n\t{\r\n\t\tjsonForm = JSON.parse(jsonForm);\r\n\t} catch (error)\r\n\t{\r\n\t\t// jsonForm = null;\r\n\t\tif (jsonForm === 'Not Found' || jsonForm === 'Bad Request')\r\n\t\t{\r\n\t\t\talert(invalidKittyAlert);\r\n\t\t\tjsonForm = null;\r\n\t\t}\r\n\t\tsetActiveStep(0);\r\n\t}\r\n\tif (jsonForm !== null)\r\n\t{\r\n\t\t// kitty queue is initialized with the ck corresponding to the user input\r\n\t\tKittyqueue.push(jsonForm);\r\n\t\t// idArray.push(jsonForm.id);\r\n\r\n\t\t// initialize with 420, because funny number. haha\r\n\t\tvar edgeIdCount = 420;\r\n\r\n\t\tvar fetchingCKOnInterval = setInterval(async () =>\r\n\t\t{\r\n\t\t\tif (Kittyqueue.length > 0)\r\n\t\t\t{\r\n\t\t\t\tcurrentKitty = Kittyqueue.shift();\r\n\t\t\t\t// check for unique node\r\n\t\t\t\tif (!idArray.includes(currentKitty.id))\r\n\t\t\t\t{\r\n\t\t\t\t\tNodeArray.push(ExtractNode(currentKitty));\r\n\t\t\t\t\tidArray.push(currentKitty.id);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tconsole.warn('duplicate id detected: ' + currentKitty.id);\r\n\t\t\t\t}\r\n\t\t\t\t// generation 0 kitties dont have parents :'(\r\n\t\t\t\tif (currentKitty.generation > 0)\r\n\t\t\t\t{\r\n\r\n\t\t\t\t\tlet curredge = ExtractEdge(currentKitty, edgeIdCount += 2);\r\n\t\t\t\t\tidArray.push(curredge['matron'].id, curredge['sire'].id);\r\n\t\t\t\t\tEdgeArray.push(curredge['matron']);\r\n\t\t\t\t\tEdgeArray.push(curredge['sire']);\r\n\t\t\t\t\ttry\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlet response = await fetch(apiURL + curredge['matron'].to);\r\n\t\t\t\t\t\tlet jsonForm = await response.json();\r\n\t\t\t\t\t\tKittyqueue.push(jsonForm);\r\n\t\t\t\t\t} catch (err)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconsole.error('Error while fetching matron', err);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttry\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlet response = await fetch(apiURL + curredge['sire'].to);\r\n\t\t\t\t\t\tlet jsonForm = await response.json();\r\n\t\t\t\t\t\tKittyqueue.push(jsonForm);\r\n\t\t\t\t\t} catch (err)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconsole.error('Error while fetching sire', err);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tsetCount(NodeArray.length);\r\n\t\t\t} else\r\n\t\t\t{\r\n\t\t\t\tclearInterval(fetchingCKOnInterval);\r\n\t\t\t\tsetActiveStep(STEP_CONVERT_TO_ELEMENTS);\r\n\t\t\t\t// make all of the graph nodes/components\r\n\t\t\t\tlet KittyNodeComponents = [],\r\n\t\t\t\t\tKittyEdgeComponents = [];\r\n\t\t\t\t// STEP_CONVERT_TO_ELEMENTS\r\n\t\t\t\tfor (const nodeJson in NodeArray)\r\n\t\t\t\t{\r\n\t\t\t\t\tKittyNodeComponents.push(makeNodeComponent(NodeArray[nodeJson]));\r\n\t\t\t\t\tsetCount(nodeJson);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (const edgeJson in EdgeArray)\r\n\t\t\t\t{\r\n\t\t\t\t\tKittyEdgeComponents.push(makeEdgeComponent(EdgeArray[edgeJson]));\r\n\t\t\t\t\tsetCount(edgeJson);\r\n\t\t\t\t}\r\n\t\t\t\ttry { callback(KittyNodeComponents, KittyEdgeComponents, jsonForm); } catch (err) { console.err(err); }\r\n\r\n\t\t\t\tsetActiveStep(4);\r\n\t\t\t}\r\n\t\t}, FETCH_INTERVAL);\r\n\t}\r\n}\r\n","import * as React from 'react';\r\nimport {\r\n\tTypography,\r\n\tCard,\r\n\tCardContent,\r\n\tCardMedia,\r\n} from '@material-ui/core';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\nconst cardStyle = {\r\n\tdisplay: 'flex',\r\n\tflexDirection: 'row',\r\n} as React.CSSProperties;\r\n\r\n// This component accepts the json response given by the ck api\r\n// we parse the json and display the data above the network graph\r\nexport default function (props: { SelectedKitty: any }) {\r\n\treturn (\r\n\t\t<Card style={{ position: 'relative' }} variant={'outlined'}>\r\n\t\t\t<CardContent style={cardStyle}>\r\n\t\t\t\t{/* Cant find the kitty image? display a loading/skeleton component*/}\r\n\t\t\t\t{!props.SelectedKitty.id ? (\r\n\t\t\t\t\t<Skeleton variant=\"rect\" width={200} height={200} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<CardMedia\r\n\t\t\t\t\t\tcomponent=\"img\"\r\n\t\t\t\t\t\talt=\"Clicked CryptoKitty\"\r\n\t\t\t\t\t\theight=\"200px\"\r\n\t\t\t\t\t\twidth=\"200px\"\r\n\t\t\t\t\t\timage={`${props.SelectedKitty.image_url_png}`}\r\n\t\t\t\t\t\ttitle=\"Clicked CryptoKitty\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t\t<span id={'kittyCardText'}>\r\n\t\t\t\t\t<ValueText\r\n\t\t\t\t\t\tchildren={\r\n\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\thref={`https://www.cryptokitties.co/kitty/${props.SelectedKitty.id}`}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{`${\r\n\t\t\t\t\t\t\t\t\tprops.SelectedKitty.name === null\r\n\t\t\t\t\t\t\t\t\t\t? ''\r\n\t\t\t\t\t\t\t\t\t\t: props.SelectedKitty.name+'\\n'\r\n\t\t\t\t\t\t\t\t} (#${props.SelectedKitty.id})`}\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<InfoHeader\r\n\t\t\t\t\t\ttext={\r\n\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\thref={\r\n\t\t\t\t\t\t\t\t\t'https://cryptokitties.co/profile/' +\r\n\t\t\t\t\t\t\t\t\tprops.SelectedKitty.owner.address\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{props.SelectedKitty.owner.nickname}\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ticon={<AccountCircleIcon />}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<InfoHeader text={`Gen ${props.SelectedKitty.generation}`} />\r\n\t\t\t\t</span>\r\n\t\t\t</CardContent>\r\n\t\t</Card>\r\n\t);\r\n}\r\n\r\nfunction ValueText({ children, ...otherProps }) {\r\n\treturn (\r\n\t\t<Typography variant=\"h6\" color=\"textPrimary\" {...otherProps}>\r\n\t\t\t{children}\r\n\t\t</Typography>\r\n\t);\r\n}\r\nfunction InfoHeader({ icon = <span />, text, ...otherProps }) {\r\n\treturn (\r\n\t\t<span\r\n\t\t\tstyle={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}\r\n\t\t>\r\n\t\t\t{icon}\r\n\t\t\t<Typography\r\n\t\t\t\tvariant=\"subtitle1\"\r\n\t\t\t\tcolor=\"textSecondary\"\r\n\t\t\t\tstyle={{  }}\r\n\t\t\t\t{...otherProps}\r\n\t\t\t>\r\n\t\t\t\t{text}\r\n\t\t\t</Typography>\r\n\t\t</span>\r\n\t);\r\n}\r\n","import * as React from 'react';\r\nimport {\r\n\tCard,\r\n\tTableContainer,\r\n\tTable,\r\n\tTableHead,\r\n\tTableRow,\r\n\tTableCell,\r\n\tTableBody,\r\n\tExpansionPanel,\r\n\tExpansionPanelSummary,\r\n\tTypography,\r\n\tExpansionPanelDetails,\r\n} from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\n// const cardStyle = {\r\n// \tdisplay: 'flex',\r\n// \tflexDirection: 'row',\r\n// } as React.CSSProperties;\r\n\r\n//0: {group_n: 1, group_tag: \"FU\", codex_type: \"fur\", api_type: \"body\", api_desc: Array(32), …}\r\n// 1: {group_n: 2, group_tag: \"PA\", codex_type: \"pattern\", api_type: \"pattern\", api_desc: Array(32), …}\r\n// 2: {group_n: 3, group_tag: \"EC\", codex_type: \"eye color\", api_type: \"coloreyes\", api_desc: Array(32), …}\r\n// 3: {group_n: 4, group_tag: \"ES\", codex_type: \"eye shape\", api_type: \"eyes\", api_desc: Array(32), …}\r\n// 4: {group_n: 5, group_tag: \"BC\", codex_type: \"base colour\", api_type: \"colorprimary\", api_desc: Array(32), …}\r\n// 5: {group_n: 6, group_tag: \"HC\", codex_type: \"highlight colour\", api_type: \"colorsecondary\", api_desc: Array(32), …}\r\n// 6: {group_n: 7, group_tag: \"AC\", codex_type: \"accent colour\", api_type: \"colortertiary\", api_desc: Array(32), …}\r\n// 7: {group_n: 8, group_tag: \"WE\", codex_type: \"wild element\", api_type: \"wild\", api_desc: Array(32), …}\r\n// 8: {group_n: 9, group_tag: \"MO\", codex_type: \"mouth\", api_type: \"mouth\", api_desc: Array(32), …}\r\n// 9: {group_n: 10, group_tag: \"EN\", codex_type: \"environment\", api_type: \"environment\", api_desc: Array(32), …}\r\n// 10: {group_n: 11, group_tag: \"SE\", codex_type: \"secret\", api_type: \"secret\", api_desc: Array(32), …}\r\n// 11: {group_n: 12, group_tag: \"PU\", codex_type: \"purrstige\", api_type: \"purrstige\", api_desc: Array(32), …}\r\nconst DefaultCells = (props) => (\r\n\t<React.Fragment>\r\n\t\t<TableCell key={123}>-</TableCell>\r\n\t\t<TableCell key={124}>-</TableCell>\r\n\t\t<TableCell key={125}>-</TableCell>\r\n\t\t<TableCell key={126}>-</TableCell>\r\n\t</React.Fragment>\r\n);\r\nconst ExpansionWrapper = (props) => {\r\n\treturn (\r\n\t\t<ExpansionPanel style={{ marginBottom: '10px', marginTop: '20px' }}>\r\n\t\t\t<ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n\t\t\t\t<Typography variant=\"subtitle2\">\r\n\t\t\t\t\t<strong>CKBox Gene Table</strong>\r\n\t\t\t\t</Typography>\r\n\t\t\t</ExpansionPanelSummary>\r\n\t\t\t<ExpansionPanelDetails\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\tflexDirection: 'column',\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{props.children}\r\n\t\t\t</ExpansionPanelDetails>\r\n\t\t</ExpansionPanel>\r\n\t);\r\n};\r\nexport default function (props: { traits: [][] }) {\r\n\tvar i = 69420;\r\n\tconst createCellsForRow = (traits: [][], index: number) => {\r\n\t\treturn traits.length > 0 ? (\r\n\t\t\ttraits[index].map((traitName) => (\r\n\t\t\t\t<TableCell key={i++}>{traitName}</TableCell>\r\n\t\t\t))\r\n\t\t) : (\r\n\t\t\t<DefaultCells />\r\n\t\t);\r\n\t};\r\n\tconsole.log(props.traits);\r\n\treturn (\r\n\t\t<ExpansionWrapper>\r\n\t\t\t{props.traits.length > 0 ? (\r\n\t\t\t\t<TableContainer component={Card}>\r\n\t\t\t\t\t<Table size=\"small\">\r\n\t\t\t\t\t\t<TableHead>\r\n\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t<TableCell>\r\n\t\t\t\t\t\t\t\t\t<b>Trait Type</b>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell>\r\n\t\t\t\t\t\t\t\t\t<b>Primary</b>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell>\r\n\t\t\t\t\t\t\t\t\t<b>Hidden 1</b>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell>\r\n\t\t\t\t\t\t\t\t\t<b>Hidden 2</b>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell>\r\n\t\t\t\t\t\t\t\t\t<b>Hidden 3</b>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t</TableHead>\r\n\t\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t<TableCell>\r\n\t\t\t\t\t\t\t\t\t<b>Fur</b>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t{createCellsForRow(props.traits, 0)}\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t<TableCell>\r\n\t\t\t\t\t\t\t\t\t<b>Pattern</b>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t{createCellsForRow(props.traits, 1)}\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t<TableCell>\r\n\t\t\t\t\t\t\t\t\t<b>Eye Color</b>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t{createCellsForRow(props.traits, 2)}\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t<TableCell>\r\n\t\t\t\t\t\t\t\t\t<b>Eye Shape</b>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t{createCellsForRow(props.traits, 3)}\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t<TableCell>\r\n\t\t\t\t\t\t\t\t\t<b>Base Colour</b>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t{createCellsForRow(props.traits, 4)}\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t<TableCell>\r\n\t\t\t\t\t\t\t\t\t<b>Highlight Colour</b>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t{createCellsForRow(props.traits, 5)}\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t<TableCell>\r\n\t\t\t\t\t\t\t\t\t<b>Accent Colour</b>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t{createCellsForRow(props.traits, 6)}\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t<TableCell>\r\n\t\t\t\t\t\t\t\t\t<b>Wild Element</b>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t{createCellsForRow(props.traits, 7)}\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t<TableCell>\r\n\t\t\t\t\t\t\t\t\t<b>Mouth</b>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t{createCellsForRow(props.traits, 8)}\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t<TableCell>\r\n\t\t\t\t\t\t\t\t\t<b>Environment</b>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t{createCellsForRow(props.traits, 9)}\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t<TableCell>\r\n\t\t\t\t\t\t\t\t\t<b>Secret</b>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t{createCellsForRow(props.traits, 10)}\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t\t<TableCell>\r\n\t\t\t\t\t\t\t\t\t<b>Purrstige</b>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t{createCellsForRow(props.traits, 11)}\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t</Table>\r\n\t\t\t\t</TableContainer>\r\n\t\t\t) : (\r\n\t\t\t\t<Typography variant=\"h6\">Click a kitty to display gene data</Typography>\r\n\t\t\t)}\r\n\t\t</ExpansionWrapper>\r\n\t);\r\n}\r\n","import {\r\n\tBox,\r\n\tCard,\r\n\tContainer,\r\n\tCssBaseline,\r\n\tThemeProvider,\r\n\tTypography,\r\n\tCollapse,\r\n\tButton,\r\n} from '@material-ui/core';\r\nimport Stepper from './components/Stepper';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport * as React from 'react';\r\nimport { render } from 'react-dom';\r\nimport DarkModeToggleButton from './components/DarkModeToggleButton';\r\nimport Description from './components/Description';\r\nimport KittySubmit from './components/KittySubmit';\r\nimport ScanningKittiesLoader from './components/ScanningKittiesLoader';\r\nimport Title from './components/Title';\r\nimport { fetchCattributes } from './util/fetchCKBoxData';\r\n\r\nimport { StructureNetwork } from './network';\r\nimport './styles/styles.css';\r\nimport {\r\n\tasyncGetKittyJSON,\r\n\tcheckForFullKittyAddress,\r\n\tfullAddressToShortID,\r\n} from './util/fetchKitty';\r\nimport KittyInfoCard from './components/KittyInfoCard';\r\nimport GeneTable from './components/GeneTable';\r\n\r\n// Material UI theme objects passed to theme provide, primarily used to toggle dark theme\r\nconst darkTheme = createMuiTheme({\r\n\tpalette: {\r\n\t\ttype: 'dark',\r\n\t},\r\n});\r\nconst lightTheme = createMuiTheme({\r\n\tpalette: {\r\n\t\ttype: 'light',\r\n\t},\r\n});\r\n\r\ninterface Theme {\r\n\tisDark: boolean;\r\n}\r\ninterface AppState {\r\n\tkittyNodes: Array<React.ReactNode>;\r\n\tkittyEdges: Array<React.ReactNode>;\r\n\tactiveStep: number;\r\n\tscannedKitties: number;\r\n\ttheme: Theme;\r\n\tchecked: boolean;\r\n\tselectedKitty: any;\r\n\tcattributes: any;\r\n\ttrait_data: any;\r\n}\r\nconst DonationFooter = (\r\n\t<footer>\r\n\t\t<a\r\n\t\t\tid=\"eth-donate\"\r\n\t\t\thref=\"https://flannyan.argent.xyz/\"\r\n\t\t\tstyle={{ margin: '10px' }}\r\n\t\t>\r\n\t\t\t<Typography variant=\"body1\" color=\"textPrimary\">\r\n\t\t\t\teth donations: 0xb41919C5700779c45116377657Ce56B4E3508eb3\r\n\t\t\t</Typography>\r\n\t\t\t<span style={{ display: 'flex' }}>\r\n\t\t\t\t<script\r\n\t\t\t\t\tasync\r\n\t\t\t\t\tsrc=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\"\r\n\t\t\t\t></script>\r\n\t\t\t\t<ins\r\n\t\t\t\t\tclassName=\"adsbygoogle\"\r\n\t\t\t\t\tstyle={{ display: 'block' }}\r\n\t\t\t\t\tdata-ad-client=\"ca-pub-2960503596344601\"\r\n\t\t\t\t\tdata-ad-slot=\"4348036133\"\r\n\t\t\t\t\tdata-ad-format=\"auto\"\r\n\t\t\t\t\tdata-full-width-responsive=\"true\"\r\n\t\t\t\t></ins>\r\n\t\t\t\t<script>(adsbygoogle = window.adsbygoogle || []).push({});</script>\r\n\t\t\t</span>\r\n\t\t</a>\r\n\t</footer>\r\n);\r\n\r\n// Root Application Component\r\nclass App extends React.Component<{}, AppState> {\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\t// Node components given to visjs graph; updated by fetchkitty.js\r\n\t\t\tkittyNodes: [],\r\n\t\t\t// Edge compoenents given to visjs graph\r\n\t\t\tkittyEdges: [],\r\n\t\t\t// Stepper progress\r\n\t\t\tactiveStep: 0,\r\n\t\t\t// Count of kitties fetched through api\r\n\t\t\tscannedKitties: 0,\r\n\t\t\ttheme: {\r\n\t\t\t\tisDark: true,\r\n\t\t\t},\r\n\t\t\tchecked: true,\r\n\t\t\tselectedKitty: {},\r\n\t\t\ttrait_data: [],\r\n\t\t\tcattributes: {},\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tfetchCattributes((response) => {\r\n\t\t\tthis.setState({ cattributes: response });\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\t// console.log(this.state);\r\n\t\treturn (\r\n\t\t\t<ThemeProvider\r\n\t\t\t\ttheme={this.state.theme.isDark === false ? lightTheme : darkTheme}\r\n\t\t\t>\r\n\t\t\t\t<CssBaseline />\r\n\t\t\t\t<DarkModeToggleButton\r\n\t\t\t\t\tisDark={this.state.theme.isDark}\r\n\t\t\t\t\tonClick={this.setStateThemeIsDark()}\r\n\t\t\t\t/>\r\n\t\t\t\t<Box className=\"App\">\r\n\t\t\t\t\t<Title />\r\n\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t<Description />\r\n\t\t\t\t\t\t<Collapse in={this.state.checked}>\r\n\t\t\t\t\t\t\t{/* Card content will be hot-swapped */}\r\n\t\t\t\t\t\t\t<Card variant=\"outlined\" style={{ padding: '80px' }}>\r\n\t\t\t\t\t\t\t\t{this.state.activeStep === 0 ? (\r\n\t\t\t\t\t\t\t\t\t<KittySubmit onKittySubmit={this.handleKittySubmit()} />\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{/* Show a loading bar on steps 1 & 2 */}\r\n\t\t\t\t\t\t\t\t{this.state.activeStep === 1 || this.state.activeStep === 2 ? (\r\n\t\t\t\t\t\t\t\t\t<ScanningKittiesLoader\r\n\t\t\t\t\t\t\t\t\t\tactiveStep={this.state.activeStep}\r\n\t\t\t\t\t\t\t\t\t\tcount={this.state.scannedKitties}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t<main>\r\n\t\t\t\t\t\t\t\t\t{/* Kitty Family Tree Visualization Graph */}\r\n\t\t\t\t\t\t\t\t\t{this.state.activeStep === 4 ? (\r\n\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t<KittyInfoCard SelectedKitty={this.state.selectedKitty} />\r\n\t\t\t\t\t\t\t\t\t\t\t<StructureNetwork\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetCattributes={(data) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({ cattributes: data });\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tcattributes={this.state.cattributes}\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"network\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tisDark={this.state.theme.isDark}\r\n\t\t\t\t\t\t\t\t\t\t\t\tedges={this.state.kittyEdges}\r\n\t\t\t\t\t\t\t\t\t\t\t\tnodes={this.state.kittyNodes}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedKitty={(kitty) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (kitty !== this.state.selectedKitty)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({ selectedKitty: kitty });\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetTraitData={(data) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({ trait_data: data });\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<GeneTable traits={this.state.trait_data} />\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.reInitializeState()}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\tScan Another Kitty!\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</main>\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t</Collapse>\r\n\t\t\t\t\t\t<Stepper activeStep={this.state.activeStep} />\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t\t{DonationFooter}\r\n\t\t\t\t</Box>\r\n\t\t\t</ThemeProvider>\r\n\t\t);\r\n\t}\r\n\r\n\tprivate setStateThemeIsDark():\r\n\t\t| ((event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void)\r\n\t\t| undefined {\r\n\t\treturn () => {\r\n\t\t\tthis.setState({\r\n\t\t\t\ttheme: {\r\n\t\t\t\t\tisDark: this.state.theme.isDark === true ? false : true,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t};\r\n\t}\r\n\r\n\tprivate reInitializeState():\r\n\t\t| ((event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void)\r\n\t\t| undefined {\r\n\t\treturn () => {\r\n\t\t\tthis.setState({ checked: false });\r\n\t\t\tthis.setState({\r\n\t\t\t\t// Node components given to visjs graph; updated by fetchkitty.js\r\n\t\t\t\tkittyNodes: [],\r\n\t\t\t\t// Edge compoenents given to visjs graph\r\n\t\t\t\tkittyEdges: [],\r\n\t\t\t\t// Stepper progress\r\n\t\t\t\tactiveStep: 0,\r\n\t\t\t\t// Count of kitties fetched through api\r\n\t\t\t\tscannedKitties: 0,\r\n\t\t\t\ttheme: {\r\n\t\t\t\t\tisDark: false,\r\n\t\t\t\t},\r\n\t\t\t\tchecked: true,\r\n\t\t\t\tselectedKitty: {},\r\n\t\t\t\ttrait_data: [],\r\n\t\t\t\t// cattributes: {},\r\n\t\t\t});\r\n\t\t\tsetTimeout(() => this.setState({ checked: true }), 500);\r\n\t\t};\r\n\t}\r\n\r\n\tprivate handleKittySubmit(): (arg0: any) => void {\r\n\t\treturn (input) => {\r\n\t\t\tthis.setState({ checked: false });\r\n\t\t\tif (checkForFullKittyAddress(input)) {\r\n\t\t\t\t//parse the id from the url\r\n\t\t\t\tinput = fullAddressToShortID(input);\r\n\t\t\t}\r\n\t\t\t// check for invalid input and parse int NaN==NotANumber\r\n\t\t\tlet ParsedInt = Number.parseInt(input, 10);\r\n\t\t\tif (!isNaN(ParsedInt) && input !== '0' && ParsedInt > 0) {\r\n\t\t\t\tinput = ParsedInt;\r\n\t\t\t\t// toggle transition for displaying graph\r\n\t\t\t\tthis.setState({ activeStep: 1 });\r\n\t\t\t\tsetTimeout(() => this.setState({ checked: true }), 500);\r\n\t\t\t\t// fetchkitty.js\r\n\t\t\t\tasyncGetKittyJSON(\r\n\t\t\t\t\tinput,\r\n\t\t\t\t\t(Nodes: any, Edges: any, inputKitty: string) => {\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\tkittyNodes: Nodes,\r\n\t\t\t\t\t\t\tkittyEdges: Edges,\r\n\t\t\t\t\t\t\tselectedKitty: inputKitty,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t},\r\n\t\t\t\t\t(ScannedCount: any) => {\r\n\t\t\t\t\t\tthis.setState({ scannedKitties: ScannedCount });\r\n\t\t\t\t\t},\r\n\t\t\t\t\t(step: any) => {\r\n\t\t\t\t\t\tthis.setState({ activeStep: step, checked: false });\r\n\t\t\t\t\t\tthis.setState({ checked: true });\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tthis.setState({ checked: true });\r\n\t\t};\r\n\t}\r\n}\r\n\r\nconst rootElement = document.getElementById('root');\r\nrender(<App />, rootElement);\r\n"],"sourceRoot":""}